USERS
- id (PK)
- name
- email (unique)
- avatar_url
- phone
- address
- nik (unique)
- city
- email_verified_at
- password
- google_id (unique)
- profile_image
- role (default: 'user')
- remember_token
- created_at, updated_at

ROLES
- id (PK)
- code (unique)
- name
- created_at, updated_at

USER_ROLES (Junction Table)
- id (PK)
- user_id (FK → users.id)
- role_id (FK → roles.id)
- created_at, updated_at
- UNIQUE(user_id, role_id)

JENIS_TRAININGS
- id (PK)
- code (unique)
- name
- description
- created_at, updated_at

TRAININGS
- id (PK)
- name
- category
- description
- status (enum: pending, approved, completed, rejected)
- jenis_training_id (FK → jenis_trainings.id)
- created_at, updated_at

TRAINING_DETAILS
- id (PK)
- training_id (FK → trainings.id)
- start_date
- end_date
- created_at, updated_at

TRAINING_MEMBERS
- id (PK)
- training_detail_id (FK → training_details.id)
- user_id (FK → users.id)
- series (unique)
- created_at, updated_at

TRAINING_MATERIALS
- id (PK)
- training_id (FK → trainings.id)
- title
- description
- media_type
- media_path
- created_at, updated_at

TASKS
- id (PK)
- training_id (FK → trainings.id)
- title
- description
- deadline
- created_at, updated_at

TASK_SUBMISSIONS
- id (PK)
- task_id (FK → tasks.id)
- user_id (FK → users.id)
- answer
- file_path
- submitted_at
- created_at, updated_at
- UNIQUE(task_id, user_id)

SCHEDULES
- id (PK)
- training_id (FK → trainings.id)
- title
- date
- start_time
- end_time
- location
- instructor
- created_at, updated_at

CERTIFICATES
- id (PK)
- user_id (FK → users.id)
- name
- organization
- issue_date
- expiry_date
- file_path
- created_at, updated_at


resources/
├── css/
│   └── app.css
├── js/
│   ├── app.js
│   └── bootstrap.js
└── views/
    ├── layouts/
    │   ├── app.blade.php
    │   ├── dashboard.blade.php
    │   ├── training.blade.php
    │   └── welcome.blade.php
    ├── components/
    │   ├── alert.blade.php
    │   ├── modal.blade.php
    │   └── new-alert.blade.php
    ├── auth/
    │   ├── login.blade.php
    │   ├── register.blade.php
    │   └── complete.blade.php
    ├── admin/
    │   ├── index.blade.php
    │   ├── settings.blade.php
    │   └── users.blade.php
    ├── training/
    │   ├── index.blade.php
    │   ├── manage.blade.php
    │   ├── general-knowledge.blade.php
    │   ├── mandatory.blade.php
    │   ├── license.blade.php
    │   ├── customer-requested.blade.php
    │   ├── detail.blade.php
    │   ├── create.blade.php
    │   ├── absen.blade.php
    │   ├── settings.blade.php
    │   ├── members/
    │   │   ├── index.blade.php
    │   │   ├── add.blade.php
    │   │   └── user-member.blade.php
    │   ├── materials/
    │   │   └── index.blade.php
    │   ├── schedule/
    │   │   ├── index.blade.php
    │   │   └── create.blade.php
    │   ├── tasks/
    │   │   ├── index.blade.php
    │   │   └── show.blade.php
    │   └── feedback/
    │       └── index.blade.php
    ├── dashboard/
    │   ├── index.blade.php
    │   ├── inbox.blade.php
    │   ├── history.blade.php
    │   ├── notifications.blade.php
    │   └── profile.blade.php
    ├── pages/
    │   ├── home.blade.php
    │   ├── help.blade.php
    │   ├── services.blade.php
    │   ├── company-detail.blade.php
    │   ├── production-statistics.blade.php
    │   ├── fortal-hr.blade.php
    │   ├── laporan-data.blade.php
    │   ├── kontak-divisi.blade.php
    │   ├── terms.blade.php
    │   ├── sistem-training.blade.php
    │   └── sertifikat.blade.php
    ├── assignments/
    │   ├── index.blade.php
    │   ├── create.blade.php
    │   └── submissions.blade.php
    ├── certificates/
    │   ├── index.blade.php
    │   └── template.blade.php
    ├── errors/
    │   ├── 403.blade.php
    │   ├── 404.blade.php
    │   └── training-404.blade.php
    └── partials/
        ├── breadcrumb.blade.php
        ├── footer.blade.php
        ├── navbar.blade.php
        ├── sidebar.blade.php
        ├── sidebar-training.blade.php
        └── header.blade.php


Analisis dan optimalkan controller Laravel berikut ini agar lebih efisien dan sesuai best practice.

- Hindari N+1 query dengan eager loading (with()).
- Gunakan pagination untuk data list, bukan all().
- Tambahkan validasi pada method store() dan update().
- Kembalikan data ke Blade view, bukan JSON.
- Gunakan dependency injection bila perlu.
- Bersihkan kode duplikat atau query yang tidak efisien.
- Tambahkan komentar singkat di setiap method.

Berikut kode controllernya:
#file:TrainingController.php #file:TaskController.php #file:DashboardController.php #file:AuthController.php #file:ProfileController.php